<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABAnAAAQJwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGsAAACBAAAAgQAAAIEAAACBAAAAgQAAAIEAAACBAAAAgQAA
        AIEAAACBAAAAgQAAAIEAAACBAAAAgQAAAIEAAACBAAAAgQAAAIEAAACBAAAAfgAAAE8AAAAIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAADHAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+QAA
        AIAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcQAAAP8AAADgAAAAnwAAAJ0AAACdAAAAnQAA
        AJ0AAACdAAAAnQAAAJ0AAACdAAAAnQAAAJ0AAACdAAAAnQAAAJ0AAACdAAAAnQAAAJ0AAACdAAAAnAAA
        ALIAAAD7AAAA4gAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJAAAA/wAAAJoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAJQAAAOYAAADxAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIkAAAD/AAAAlwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAiAAAA5QAAAPEAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiQAA
        AP8AAACXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAADlAAAA8QAAADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACJAAAA/wAAAJcAAAAAAAAAAAAAAAAAAAAiAAAAfAAAAHYAAABdAAAARgAAADIAAAAhAAAAEwAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAAAOUAAADxAAAAMgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIkAAAD/AAAAlwAAAAAAAAAAAAAAAAAAAHUAAAD/AAAA/wAAAP8AAAD7AAAA8AAA
        AOMAAADSAAAAeQAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA5QAAAPEAAAAyAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAiQAAAP8AAACXAAAAAAAAAAAAAAAAAAAAbQAAAP8AAADuAAAAxwAA
        ANcAAADnAAAA9AAAAP8AAAD7AAAAggAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAADlAAAA8AAA
        ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJAAAA/wAAAJcAAAAAAAAAAAAAAAAAAABUAAAA/wAA
        AMwAAAAaAAAAFgAAACYAAAA2AAAAjQAAAPsAAAD7AAAAggAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAIwAA
        AOUAAADwAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIkAAAD/AAAAlwAAAAAAAAAAAAAAAAAA
        AD4AAAD3AAAA3AAAABoAAAAAAAAAAAAAAAAAAAAHAAAAhgAAAPwAAAD7AAAAggAAAAYAAAAAAAAAAAAA
        AAAAAAAjAAAA5QAAAPAAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiQAAAP8AAACXAAAAAAAA
        AAAAAAAAAAAAKwAAAOwAAADrAAAAKgAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAhgAAAPwAAAD7AAAAggAA
        AAcAAAAAAAAAAAAAACMAAADlAAAA8AAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJAAAA/wAA
        AJcAAAAAAAAAAAAAAAAAAAAcAAAA3QAAAPcAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAhgAA
        APwAAAD7AAAAfwAAAAQAAAAAAAAAIwAAAOUAAADwAAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIkAAAD/AAAAlwAAAAAAAAAAAAAAAAAAAA4AAADKAAAA/wAAAJUAAAAKAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAIAAAAhgAAAP4AAADdAAAAGgAAAAAAAAAjAAAA5QAAAPAAAAAxAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAiQAAAP8AAACXAAAAAAAAAAAAAAAAAAAAAAAAAG0AAAD3AAAA/gAAAI8AAAAKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAJAAAAZAAAAFsAAAAEAAAAAAAAACMAAADlAAAA8AAAADEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACJAAAA/wAAAJcAAAAAAAAAAAAAAAAAAAAAAAAABAAAAHUAAAD3AAAA/gAA
        AI8AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIwAAAOUAAADwAAAAMQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIkAAAD/AAAAlwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AHUAAAD3AAAA/gAAAI8AAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjAAAA5QAA
        APAAAAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiQAAAP8AAACXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAAHUAAAD3AAAA/gAAAI8AAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACQAAADmAAAA8QAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJAAAA/wAAAJcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAHUAAAD3AAAA/gAAAI8AAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHwAAAOIAAAD/AAAAhgAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIkAAAD/AAAAlwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAHUAAAD3AAAA/gAAAI8AAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAgAAAAPsAAAD6AAAAggAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAiQAA
        AP8AAACXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAHYAAAD3AAAA/gAA
        AJAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAhAAAAPsAAAD7AAAAggAAAAcAAAAAAAAAAAAA
        AAAAAACJAAAA/wAAAJYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AHYAAAD3AAAA/gAAAJAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAhAAAAPsAAAD7AAAAdQAA
        AAEAAAAAAAAAAAAAAIcAAAD/AAAAqwAAACAAAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAYAAAABgAAAHYAAAD3AAAA/gAAAJAAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAhgAA
        AP4AAADnAAAALgAAAAAAAAAAAAAAWAAAAPwAAAD5AAAA4gAAAOEAAADhAAAA4QAAAOEAAADhAAAA4QAA
        AOEAAADhAAAA4QAAANoAAABPAAAAAQAAAHYAAAD3AAAA/gAAAJAAAAALAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAQAAAAxQAAAP8AAABtAAAAAAAAAAAAAAAMAAAAiwAAAOgAAAD0AAAA9AAAAPQAAAD0AAAA9AAA
        APQAAAD0AAAA9AAAAPQAAAD0AAAA7wAAAF8AAAAAAAAABAAAAHYAAAD3AAAA/gAAAJAAAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACcAAAA/wAAAIYAAAAAAAAAAAAAAAAAAAAEAAAAKAAAADcAAAA3AAAANwAA
        ADcAAAA3AAAANwAAADcAAAA3AAAANwAAADgAAAAvAAAACAAAAAAAAAAAAAAABAAAAHYAAAD3AAAA/gAA
        AJAAAAALAAAAAAAAAAAAAAAAAAAADQAAAMAAAAD/AAAAcQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AHcAAAD3AAAA/gAAAJMAAAAWAAAAAAAAAA4AAAB/AAAA+wAAAOsAAAAzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAHcAAAD3AAAA/wAAAM0AAACkAAAAxAAAAPwAAAD+AAAAgQAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAGsAAADgAAAA/wAAAP8AAAD/AAAA6QAAAH8AAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcAAABkAAAAfwAAAGoAAAAwAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAA8DwAAHA8AAAwPAAAEDwAA
        BA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8CAAAHAwAcAwOADAEDwAQBA+AAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//wAD//+AA///wAP//+AM=
</value>
  </data>
</root>